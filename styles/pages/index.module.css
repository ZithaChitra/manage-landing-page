@media (min-width:71.875em){.home__info{display:flex;justify-content:center}}.home__info-title{margin:0 auto 3.75rem;width:calc(100% - 5.875rem)}@media (min-width:71.875em){.home__info-title{margin:0 9.375rem 0 0;width:27.1875rem}}.home__info-title h2{color:var(--dark-blue);font-size:1.75rem;line-height:2.1875rem;margin:0 0 2rem;text-align:center}@media (min-width:71.875em){.home__info-title h2{font-size:2rem;line-height:2.3125rem;text-align:left}}.home__info-prop{position:relative}.home__info-prop:not(:last-child){margin-bottom:3rem}@media (min-width:71.875em){.home__info-prop{max-width:27.375rem}}.home__info-prop-title{background:rgba(242,95,58,.5);border-bottom-left-radius:1.1875rem;border-top-left-radius:1.1875rem;height:2.375rem;margin-bottom:1.25rem;margin-left:1.125rem}@media (min-width:71.875em){.home__info-prop-title{background:unset;margin-left:0}}.home__info-prop-title span{align-items:center;background:var(--bright-red);border-radius:1.1875rem;color:#fff;display:flex;font-size:1rem;height:2.375rem;justify-content:center;margin-right:1.125rem;width:4.25rem}@media (min-width:71.875em){.home__info-prop-title span{left:-5.3125rem;margin-right:0;position:absolute;top:0}}.home__info-prop-title h3{color:var(--dark-blue);font-size:.875rem;margin:auto 0}.home__info-prop p{margin:0 auto;width:calc(100% - 2.125rem)}@media (min-width:71.875em){.home__info-prop p{margin:0}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWwvYnJlYWtwb2ludHMuc2NzcyIsInBhZ2VzL2luZGV4Lm1vZHVsZS5zY3NzIiwicGFnZXMvaW5kZXgubW9kdWxlLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFlQyw0QkNWRyxZQUdRLFlBQUEsQ0FDQSxzQkNMVixDQUNGLENEUVEsa0JBSUkscUJBQUEsQ0FGQSwyQkNMWixDRktDLDRCQ0ZPLGtCQVVRLHFCQUFBLENBSEEsZ0JDSGQsQ0FDRixDRFNZLHFCQUVFLHNCQUFBLENBQ0EsaUJBQUEsQ0FDQSxxQkFBQSxDQUVBLGVBQUEsQ0FMQSxpQkNGZCxDRlhDLDRCQ1lXLHFCQVVJLGNBQUEsQ0FDQSxxQkFBQSxDQUZBLGVDSmQsQ0FDRixDRGlCUSxpQkFFSSxpQkNoQlosQ0RpQlksa0NBQ0ksa0JDZmhCLENGeEJDLDRCQ21DTyxpQkFRUSxtQkNmZCxDQUNGLENEa0JZLHVCQUtJLDZCQUFBLENBRkEsbUNBQUEsQ0FEQSxnQ0FBQSxDQUVBLGVBQUEsQ0FHQSxxQkFBQSxDQURBLG9CQ2hCaEIsQ0ZyQ0MsNEJDK0NXLHVCQVVRLGdCQUFBLENBQ0EsYUNoQmxCLENBQ0YsQ0RtQmdCLDRCQUVJLGtCQUFBLENBS0EsNEJBQUEsQ0FEQSx1QkFBQSxDQUVBLFVBQUEsQ0FQQSxZQUFBLENBUUEsY0FBQSxDQUpBLGVBQUEsQ0FGQSxzQkFBQSxDQU9BLHFCQUFBLENBTkEsYUNYcEIsQ0Z2REMsNEJDOERlLDRCQWVRLGVBQUEsQ0FDQSxjQUFBLENBSEEsaUJBQUEsQ0FDQSxLQ2R0QixDQUNGLENEbUJnQiwwQkFHSSxzQkFBQSxDQURBLGlCQUFBLENBRUEsYUNsQnBCLENEd0JZLG1CQUVJLGFBQUEsQ0FEQSwyQkNyQmhCLENGeEVDLDRCQzRGVyxtQkFLUSxRQ3JCbEIsQ0FDRiIsImZpbGUiOiJwYWdlcy9pbmRleC5tb2R1bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gNjQwcHgsIDExNTBweCwgMTQwMHB4XHJcbiRicmVha3BvaW50cy11cDogKFxyXG5cdCdtZWRpdW0nOiAnNDBlbScsXHJcblx0J2xhcmdlJzogJzcxLjg3NWVtJyxcclxuXHQneGxhcmdlJzogJzg3LjVlbScsXHJcbik7XHJcblxyXG4vLyA2MzlweCwgMTE0OXB4LCAxMzk5cHhcclxuJGJyZWFrcG9pbnRzLWRvd246IChcclxuXHQnc21hbGwnOiAnMzkuOTM3NWVtJyxcclxuXHQnbWVkaXVtJzogJzcxLjgxMjVlbScsXHJcblx0J2xhcmdlJzogJzg3LjQzNzVlbScsXHJcbik7XHJcblxyXG5AbWl4aW4gYnJlYWtwb2ludHMtdXAoJHNpemUpIHtcclxuXHRAbWVkaWEgKG1pbi13aWR0aDogbWFwLWdldCgkYnJlYWtwb2ludHMtdXAsICRzaXplKSkge1xyXG5cdFx0QGNvbnRlbnQ7XHJcblx0fVxyXG59XHJcblxyXG5AbWl4aW4gYnJlYWtwb2ludHMtZG93bigkc2l6ZSkge1xyXG5cdEBtZWRpYSAobWF4LXdpZHRoOiBtYXAtZ2V0KCRicmVha3BvaW50cy1kb3duLCAkc2l6ZSkpIHtcclxuXHRcdEBjb250ZW50O1xyXG5cdH1cclxufVxyXG4iLCJAdXNlICcuLi91dGlsJyBhcyAqO1xuXG5cbi5ob21le1xuXG4gICAgJl9faW5mb3tcblxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50cy11cChsYXJnZSl7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cbiAgICAgICAgfVxuXG4gICAgICAgICYtdGl0bGV7XG5cbiAgICAgICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSByZW0oOTQpKTtcbiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogcmVtKDYwKTtcblxuICAgICAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludHMtdXAobGFyZ2Upe1xuICAgICAgICAgICAgICAgIHdpZHRoOiByZW0oNDM1KTtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiByZW0oMTUwKTtcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGgye1xuICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1kYXJrLWJsdWUpOyAgXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogcmVtKDI4KTtcbiAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IHJlbSgzNSk7XG4gICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogcmVtKDMyKTtcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnRzLXVwKGxhcmdlKXtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogcmVtKDMyKTtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogcmVtKDM3KTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuICBcbiAgICAgICAgXG4gICAgICAgICYtcHJvcHtcblxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgJjpub3QoOmxhc3QtY2hpbGQpe1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IHJlbSg0OCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnRzLXVwKGxhcmdlKXtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IHJlbSg0MzgpO1xuICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgICYtdGl0bGV7XG5cbiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiByZW0oMTkpO1xuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IHJlbSgxOSk7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiByZW0oMzgpO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjQyLCA5NSwgNTgsIC41KTtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogcmVtKDE4KTtcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiByZW0oMjApO1xuXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludHMtdXAobGFyZ2Upe1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB1bnNldDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgc3BhbntcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiByZW0oNjgpO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IHJlbSgzOCk7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IHJlbSgxOSk7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHZhcigtLWJyaWdodC1yZWQpO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogcmVtKDE2KTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiByZW0oMTgpO1xuXG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnRzLXVwKGxhcmdlKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IC0gcmVtKDg1KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBoM3tcbiAgICAgICAgICAgICAgICAgICAgLy8gaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IHJlbSgxNCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1kYXJrLWJsdWUpO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IGF1dG8gMDtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH1cblxuXG4gICAgICAgICAgICBwe1xuICAgICAgICAgICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSByZW0oMzQpKTtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcblxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnRzLXVwKGxhcmdlKXtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIFxuICAgICAgICB9XG4gIFxuICBcbiAgXG4gIFxuICAgIH1cbn0iLCJAbWVkaWEgKG1pbi13aWR0aDogNzEuODc1ZW0pIHtcbiAgLmhvbWVfX2luZm8ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIH1cbn1cbi5ob21lX19pbmZvLXRpdGxlIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDUuODc1cmVtKTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG1hcmdpbi1ib3R0b206IDMuNzVyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzEuODc1ZW0pIHtcbiAgLmhvbWVfX2luZm8tdGl0bGUge1xuICAgIHdpZHRoOiAyNy4xODc1cmVtO1xuICAgIG1hcmdpbjogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDkuMzc1cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbn1cbi5ob21lX19pbmZvLXRpdGxlIGgyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogdmFyKC0tZGFyay1ibHVlKTtcbiAgZm9udC1zaXplOiAxLjc1cmVtO1xuICBsaW5lLWhlaWdodDogMi4xODc1cmVtO1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDJyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzEuODc1ZW0pIHtcbiAgLmhvbWVfX2luZm8tdGl0bGUgaDIge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAyLjMxMjVyZW07XG4gIH1cbn1cbi5ob21lX19pbmZvLXByb3Age1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uaG9tZV9faW5mby1wcm9wOm5vdCg6bGFzdC1jaGlsZCkge1xuICBtYXJnaW4tYm90dG9tOiAzcmVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDcxLjg3NWVtKSB7XG4gIC5ob21lX19pbmZvLXByb3Age1xuICAgIG1heC13aWR0aDogMjcuMzc1cmVtO1xuICB9XG59XG4uaG9tZV9faW5mby1wcm9wLXRpdGxlIHtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMS4xODc1cmVtO1xuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAxLjE4NzVyZW07XG4gIGhlaWdodDogMi4zNzVyZW07XG4gIGJhY2tncm91bmQ6IHJnYmEoMjQyLCA5NSwgNTgsIDAuNSk7XG4gIG1hcmdpbi1sZWZ0OiAxLjEyNXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMS4yNXJlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3MS44NzVlbSkge1xuICAuaG9tZV9faW5mby1wcm9wLXRpdGxlIHtcbiAgICBiYWNrZ3JvdW5kOiB1bnNldDtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgfVxufVxuLmhvbWVfX2luZm8tcHJvcC10aXRsZSBzcGFuIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiA0LjI1cmVtO1xuICBoZWlnaHQ6IDIuMzc1cmVtO1xuICBib3JkZXItcmFkaXVzOiAxLjE4NzVyZW07XG4gIGJhY2tncm91bmQ6IHZhcigtLWJyaWdodC1yZWQpO1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgbWFyZ2luLXJpZ2h0OiAxLjEyNXJlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3MS44NzVlbSkge1xuICAuaG9tZV9faW5mby1wcm9wLXRpdGxlIHNwYW4ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogLTUuMzEyNXJlbTtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gIH1cbn1cbi5ob21lX19pbmZvLXByb3AtdGl0bGUgaDMge1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuICBjb2xvcjogdmFyKC0tZGFyay1ibHVlKTtcbiAgbWFyZ2luOiBhdXRvIDA7XG59XG4uaG9tZV9faW5mby1wcm9wIHAge1xuICB3aWR0aDogY2FsYygxMDAlIC0gMi4xMjVyZW0pO1xuICBtYXJnaW46IDAgYXV0bztcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3MS44NzVlbSkge1xuICAuaG9tZV9faW5mby1wcm9wIHAge1xuICAgIG1hcmdpbjogMDtcbiAgfVxufSJdfQ== */